{"version":3,"sources":["components/TodoList/TodoList.tsx","constants/filter.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","helpers/todos.reducer.ts","App.tsx","index.tsx"],"names":["TodoList","todos","currentTodoId","setCurrentTodo","onCurrentTodoChange","useState","localTodos","setLocalTodos","useEffect","className","map","todo","id","completed","classNames","title","type","onClick","FILTER","all","active","TodoFilter","searchQuery","filter","setFilter","onFilterChange","setSearchQuery","onSearchQueryChange","value","onChange","e","target","Object","values","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","user","setUser","isLoading","setIsLoading","userId","finally","href","email","name","prepareTodos","initialTodos","query","trim","toLocaleLowerCase","toLowerCase","includes","reducer","state","action","payload","currentTodo","initialState","App","useReducer","dispatch","fetchedTodos","newQuery","newFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1d19f79.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  currentTodoId: Todo['id'] | undefined\n  onCurrentTodoChange: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, currentTodoId, onCurrentTodoChange: setCurrentTodo,\n}) => {\n  const [localTodos, setLocalTodos] = useState(todos);\n\n  useEffect(() => {\n    setLocalTodos(todos);\n  }, [todos]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {localTodos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setCurrentTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': currentTodoId === todo.id,\n                    'fa-eye': currentTodoId !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export const FILTER = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n\nexport type Filter = keyof typeof FILTER;\n","import { FC } from 'react';\nimport { Filter, FILTER } from '../../constants/filter';\n\ntype Props = {\n  searchQuery: string,\n  filter: Filter,\n  onSearchQueryChange: (searchQuery: string) => void,\n  onFilterChange: (filter: Filter) => void,\n};\n\nexport const TodoFilter: FC<Props> = ({\n  searchQuery,\n  filter,\n  onFilterChange: setFilter,\n  onSearchQueryChange: setSearchQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            className=\"is-capitalized\"\n            onChange={(e) => setFilter(e.target.value as Filter)}\n          >\n            {Object.values(FILTER).map((value) => (\n              <option value={value} key={value}>{value}</option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo\n  onClose: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setIsLoading(false));\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            {user && (\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className=\"has-text-danger\">\n                  {\n                    todo.completed\n                      ? 'Done'\n                      : 'Planned'\n                  }\n\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FILTER, Filter } from '../constants/filter';\nimport { Todo } from '../types/Todo';\n\nexport type State = {\n  initialTodos: Todo[],\n  todos: Todo[],\n  isLoading: boolean,\n  searchQuery: string,\n  filter: Filter,\n  currentTodo: Todo | null\n};\n\nexport type Action =\n  { type: 'setInitialTodos', payload: Todo[] }\n  |\n  { type: 'setTodos', payload: Todo[] }\n  |\n  { type: 'setLoading', payload: boolean }\n  |\n  { type: 'setSearchQuery', payload: string }\n  |\n  { type: 'setFilter', payload: Filter }\n  |\n  { type: 'setCurrentTodo', payload: Todo | null };\n\nexport const prepareTodos = ({\n  initialTodos, searchQuery, filter,\n}: State): Todo[] => {\n  let todos = [...initialTodos];\n  const query = searchQuery.trim().toLocaleLowerCase();\n\n  if (query) {\n    todos = todos.filter(({ title }) => title.toLowerCase().includes(query));\n  }\n\n  switch (filter) {\n    case FILTER.completed:\n\n      return todos.filter(({ completed }) => completed);\n\n    case FILTER.active:\n      return todos.filter(({ completed }) => !completed);\n\n    default:\n      return todos;\n  }\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'setInitialTodos':\n      return {\n        ...state,\n        initialTodos: action.payload,\n        todos: action.payload,\n      };\n\n    case 'setTodos':\n      return { ...state, todos: action.payload };\n\n    case 'setLoading':\n      return { ...state, isLoading: action.payload };\n\n    case 'setSearchQuery':\n      return {\n        ...state,\n        searchQuery: action.payload,\n        todos: prepareTodos({ ...state, searchQuery: action.payload }),\n      };\n\n    case 'setFilter':\n      return {\n        ...state,\n        filter: action.payload,\n        todos: prepareTodos({ ...state, filter: action.payload }),\n      };\n\n    case 'setCurrentTodo':\n      return { ...state, currentTodo: action.payload };\n\n    default:\n      return state;\n  }\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useReducer } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { State, reducer } from './helpers/todos.reducer';\n\nconst initialState: State = {\n  initialTodos: [],\n  todos: [],\n  isLoading: false,\n  searchQuery: '',\n  filter: 'all',\n  currentTodo: null,\n};\n\nexport const App: React.FC = () => {\n  const [{\n    todos, isLoading, filter, searchQuery, currentTodo,\n  }, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    dispatch({ type: 'setLoading', payload: true });\n\n    getTodos()\n      .then(fetchedTodos => dispatch({ type: 'setInitialTodos', payload: fetchedTodos }))\n      .finally(() => dispatch({ type: 'setLoading', payload: false }));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                filter={filter}\n                onSearchQueryChange={\n                  (newQuery) => dispatch({ type: 'setSearchQuery', payload: newQuery })\n                }\n                onFilterChange={\n                  (newFilter) => dispatch({ type: 'setFilter', payload: newFilter })\n                }\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={todos}\n                currentTodoId={currentTodo?.id}\n                onCurrentTodoChange={payload => dispatch({ type: 'setCurrentTodo', payload })}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          todo={currentTodo}\n          onClose={() => dispatch({ type: 'setCurrentTodo', payload: null })}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}